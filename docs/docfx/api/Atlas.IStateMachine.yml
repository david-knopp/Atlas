### YamlMime:ManagedReference
items:
- uid: Atlas.IStateMachine
  commentId: T:Atlas.IStateMachine
  id: IStateMachine
  parent: Atlas
  children:
  - Atlas.IStateMachine.AddState``1(``0)
  - Atlas.IStateMachine.CurrentState
  - Atlas.IStateMachine.GetState``1
  - Atlas.IStateMachine.PreviousState
  - Atlas.IStateMachine.RemoveState``1
  - Atlas.IStateMachine.RevertToPrevState
  - Atlas.IStateMachine.SetState``1
  langs:
  - csharp
  - vb
  name: IStateMachine
  nameWithType: IStateMachine
  fullName: Atlas.IStateMachine
  type: Interface
  source:
    remote:
      path: Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
      branch: v0.9.4
      repo: https://github.com/david-knopp/Atlas
    id: IStateMachine
    path: ../../Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
    startLine: 2
  assemblies:
  - Assembly-CSharp
  namespace: Atlas
  syntax:
    content: public interface IStateMachine
    content.vb: Public Interface IStateMachine
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Atlas.IStateMachine.CurrentState
  commentId: P:Atlas.IStateMachine.CurrentState
  id: CurrentState
  parent: Atlas.IStateMachine
  langs:
  - csharp
  - vb
  name: CurrentState
  nameWithType: IStateMachine.CurrentState
  fullName: Atlas.IStateMachine.CurrentState
  type: Property
  source:
    remote:
      path: Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
      branch: v0.9.4
      repo: https://github.com/david-knopp/Atlas
    id: CurrentState
    path: ../../Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Atlas
  syntax:
    content: State CurrentState { get; }
    parameters: []
    return:
      type: Atlas.State
    content.vb: ReadOnly Property CurrentState As State
  overload: Atlas.IStateMachine.CurrentState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Atlas.IStateMachine.PreviousState
  commentId: P:Atlas.IStateMachine.PreviousState
  id: PreviousState
  parent: Atlas.IStateMachine
  langs:
  - csharp
  - vb
  name: PreviousState
  nameWithType: IStateMachine.PreviousState
  fullName: Atlas.IStateMachine.PreviousState
  type: Property
  source:
    remote:
      path: Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
      branch: v0.9.4
      repo: https://github.com/david-knopp/Atlas
    id: PreviousState
    path: ../../Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Atlas
  syntax:
    content: State PreviousState { get; }
    parameters: []
    return:
      type: Atlas.State
    content.vb: ReadOnly Property PreviousState As State
  overload: Atlas.IStateMachine.PreviousState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Atlas.IStateMachine.AddState``1(``0)
  commentId: M:Atlas.IStateMachine.AddState``1(``0)
  id: AddState``1(``0)
  parent: Atlas.IStateMachine
  langs:
  - csharp
  - vb
  name: AddState<StateType>(StateType)
  nameWithType: IStateMachine.AddState<StateType>(StateType)
  fullName: Atlas.IStateMachine.AddState<StateType>(StateType)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
      branch: v0.9.4
      repo: https://github.com/david-knopp/Atlas
    id: AddState
    path: ../../Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Atlas
  syntax:
    content: >-
      void AddState<StateType>(StateType state)
          where StateType : State
    parameters:
    - id: state
      type: '{StateType}'
    typeParameters:
    - id: StateType
    content.vb: Sub AddState(Of StateType As State)(state As StateType)
  overload: Atlas.IStateMachine.AddState*
  nameWithType.vb: IStateMachine.AddState(Of StateType)(StateType)
  fullName.vb: Atlas.IStateMachine.AddState(Of StateType)(StateType)
  name.vb: AddState(Of StateType)(StateType)
- uid: Atlas.IStateMachine.RemoveState``1
  commentId: M:Atlas.IStateMachine.RemoveState``1
  id: RemoveState``1
  parent: Atlas.IStateMachine
  langs:
  - csharp
  - vb
  name: RemoveState<StateType>()
  nameWithType: IStateMachine.RemoveState<StateType>()
  fullName: Atlas.IStateMachine.RemoveState<StateType>()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
      branch: v0.9.4
      repo: https://github.com/david-knopp/Atlas
    id: RemoveState
    path: ../../Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Atlas
  syntax:
    content: >-
      void RemoveState<StateType>()
          where StateType : State
    typeParameters:
    - id: StateType
    content.vb: Sub RemoveState(Of StateType As State)
  overload: Atlas.IStateMachine.RemoveState*
  nameWithType.vb: IStateMachine.RemoveState(Of StateType)()
  fullName.vb: Atlas.IStateMachine.RemoveState(Of StateType)()
  name.vb: RemoveState(Of StateType)()
- uid: Atlas.IStateMachine.GetState``1
  commentId: M:Atlas.IStateMachine.GetState``1
  id: GetState``1
  parent: Atlas.IStateMachine
  langs:
  - csharp
  - vb
  name: GetState<StateType>()
  nameWithType: IStateMachine.GetState<StateType>()
  fullName: Atlas.IStateMachine.GetState<StateType>()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
      branch: v0.9.4
      repo: https://github.com/david-knopp/Atlas
    id: GetState
    path: ../../Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Atlas
  syntax:
    content: >-
      StateType GetState<StateType>()
          where StateType : State
    typeParameters:
    - id: StateType
    return:
      type: '{StateType}'
    content.vb: Function GetState(Of StateType As State) As StateType
  overload: Atlas.IStateMachine.GetState*
  nameWithType.vb: IStateMachine.GetState(Of StateType)()
  fullName.vb: Atlas.IStateMachine.GetState(Of StateType)()
  name.vb: GetState(Of StateType)()
- uid: Atlas.IStateMachine.SetState``1
  commentId: M:Atlas.IStateMachine.SetState``1
  id: SetState``1
  parent: Atlas.IStateMachine
  langs:
  - csharp
  - vb
  name: SetState<StateType>()
  nameWithType: IStateMachine.SetState<StateType>()
  fullName: Atlas.IStateMachine.SetState<StateType>()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
      branch: v0.9.4
      repo: https://github.com/david-knopp/Atlas
    id: SetState
    path: ../../Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Atlas
  syntax:
    content: >-
      void SetState<StateType>()
          where StateType : State
    typeParameters:
    - id: StateType
    content.vb: Sub SetState(Of StateType As State)
  overload: Atlas.IStateMachine.SetState*
  nameWithType.vb: IStateMachine.SetState(Of StateType)()
  fullName.vb: Atlas.IStateMachine.SetState(Of StateType)()
  name.vb: SetState(Of StateType)()
- uid: Atlas.IStateMachine.RevertToPrevState
  commentId: M:Atlas.IStateMachine.RevertToPrevState
  id: RevertToPrevState
  parent: Atlas.IStateMachine
  langs:
  - csharp
  - vb
  name: RevertToPrevState()
  nameWithType: IStateMachine.RevertToPrevState()
  fullName: Atlas.IStateMachine.RevertToPrevState()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
      branch: v0.9.4
      repo: https://github.com/david-knopp/Atlas
    id: RevertToPrevState
    path: ../../Assets/Scripts/Runtime/AI/StateMachine/IStateMachine.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Atlas
  syntax:
    content: void RevertToPrevState()
    content.vb: Sub RevertToPrevState
  overload: Atlas.IStateMachine.RevertToPrevState*
references:
- uid: Atlas
  commentId: N:Atlas
  name: Atlas
  nameWithType: Atlas
  fullName: Atlas
- uid: Atlas.IStateMachine.CurrentState*
  commentId: Overload:Atlas.IStateMachine.CurrentState
  name: CurrentState
  nameWithType: IStateMachine.CurrentState
  fullName: Atlas.IStateMachine.CurrentState
- uid: Atlas.State
  commentId: T:Atlas.State
  parent: Atlas
  name: State
  nameWithType: State
  fullName: Atlas.State
- uid: Atlas.IStateMachine.PreviousState*
  commentId: Overload:Atlas.IStateMachine.PreviousState
  name: PreviousState
  nameWithType: IStateMachine.PreviousState
  fullName: Atlas.IStateMachine.PreviousState
- uid: Atlas.IStateMachine.AddState*
  commentId: Overload:Atlas.IStateMachine.AddState
  name: AddState
  nameWithType: IStateMachine.AddState
  fullName: Atlas.IStateMachine.AddState
- uid: '{StateType}'
  commentId: '!:StateType'
  definition: StateType
  name: StateType
  nameWithType: StateType
  fullName: StateType
- uid: StateType
  name: StateType
  nameWithType: StateType
  fullName: StateType
- uid: Atlas.IStateMachine.RemoveState*
  commentId: Overload:Atlas.IStateMachine.RemoveState
  name: RemoveState
  nameWithType: IStateMachine.RemoveState
  fullName: Atlas.IStateMachine.RemoveState
- uid: Atlas.IStateMachine.GetState*
  commentId: Overload:Atlas.IStateMachine.GetState
  name: GetState
  nameWithType: IStateMachine.GetState
  fullName: Atlas.IStateMachine.GetState
- uid: Atlas.IStateMachine.SetState*
  commentId: Overload:Atlas.IStateMachine.SetState
  name: SetState
  nameWithType: IStateMachine.SetState
  fullName: Atlas.IStateMachine.SetState
- uid: Atlas.IStateMachine.RevertToPrevState*
  commentId: Overload:Atlas.IStateMachine.RevertToPrevState
  name: RevertToPrevState
  nameWithType: IStateMachine.RevertToPrevState
  fullName: Atlas.IStateMachine.RevertToPrevState
