### YamlMime:ManagedReference
items:
- uid: Atlas.ICommand
  commentId: T:Atlas.ICommand
  id: ICommand
  parent: Atlas
  children:
  - Atlas.ICommand.Execute
  langs:
  - csharp
  - vb
  name: ICommand
  nameWithType: ICommand
  fullName: Atlas.ICommand
  type: Interface
  source:
    id: ICommand
    path: ''
    startLine: 2400
  assemblies:
  - cs.temp.dll
  namespace: Atlas
  summary: "\nInterface for creating object-based method callbacks \n"
  example: []
  syntax:
    content: public interface ICommand
    content.vb: Public Interface ICommand
  seealso:
  - linkId: Atlas.Signal
    commentId: T:Atlas.Signal
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Atlas.ICommand.Execute
  commentId: M:Atlas.ICommand.Execute
  id: Execute
  parent: Atlas.ICommand
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: ICommand.Execute()
  fullName: Atlas.ICommand.Execute()
  type: Method
  source:
    id: Execute
    path: ''
    startLine: 2405
  assemblies:
  - cs.temp.dll
  namespace: Atlas
  summary: "\nExecutes the object. When registered with a <xref href=\"Atlas.Signal\" data-throw-if-not-resolved=\"false\"></xref>, this will get called upon <xref href=\"Atlas.Signal.Dispatch\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: void Execute()
    content.vb: Sub Execute
  overload: Atlas.ICommand.Execute*
references:
- uid: Atlas.Signal
  commentId: T:Atlas.Signal
  name: Signal
  nameWithType: Signal
  fullName: Atlas.Signal
- uid: Atlas
  commentId: N:Atlas
  name: Atlas
  nameWithType: Atlas
  fullName: Atlas
- uid: Atlas.Signal.Dispatch
  commentId: M:Atlas.Signal.Dispatch
  isExternal: true
- uid: Atlas.ICommand.Execute*
  commentId: Overload:Atlas.ICommand.Execute
  name: Execute
  nameWithType: ICommand.Execute
  fullName: Atlas.ICommand.Execute
