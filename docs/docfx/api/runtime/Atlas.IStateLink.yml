### YamlMime:ManagedReference
items:
- uid: Atlas.IStateLink
  commentId: T:Atlas.IStateLink
  id: IStateLink
  parent: Atlas
  children:
  - Atlas.IStateLink.IsSatisfied
  - Atlas.IStateLink.NextState
  langs:
  - csharp
  - vb
  name: IStateLink
  nameWithType: IStateLink
  fullName: Atlas.IStateLink
  type: Interface
  source:
    id: IStateLink
    path: ''
    startLine: 5
  assemblies:
  - cs.temp.dll
  namespace: Atlas
  summary: "\nInterface for objects that represent links between <xref href=\"Atlas.State\" data-throw-if-not-resolved=\"false\"></xref>s in a <xref href=\"Atlas.StateMachine\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public interface IStateLink
    content.vb: Public Interface IStateLink
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Atlas.IStateLink.NextState
  commentId: P:Atlas.IStateLink.NextState
  id: NextState
  parent: Atlas.IStateLink
  langs:
  - csharp
  - vb
  name: NextState
  nameWithType: IStateLink.NextState
  fullName: Atlas.IStateLink.NextState
  type: Property
  source:
    id: NextState
    path: ''
    startLine: 10
  assemblies:
  - cs.temp.dll
  namespace: Atlas
  summary: "\nThe state to transition to after the current state\n"
  example: []
  syntax:
    content: State NextState { get; }
    parameters: []
    return:
      type: Atlas.State
    content.vb: ReadOnly Property NextState As State
  overload: Atlas.IStateLink.NextState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Atlas.IStateLink.IsSatisfied
  commentId: P:Atlas.IStateLink.IsSatisfied
  id: IsSatisfied
  parent: Atlas.IStateLink
  langs:
  - csharp
  - vb
  name: IsSatisfied
  nameWithType: IStateLink.IsSatisfied
  fullName: Atlas.IStateLink.IsSatisfied
  type: Property
  source:
    id: IsSatisfied
    path: ''
    startLine: 16
  assemblies:
  - cs.temp.dll
  namespace: Atlas
  summary: "\nWhether or not this link&apos;s transition condition is satisifed. This should return true when\na transition is desired, and false otherwise.\n"
  example: []
  syntax:
    content: bool IsSatisfied { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsSatisfied As Boolean
  overload: Atlas.IStateLink.IsSatisfied*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Atlas.State
  commentId: T:Atlas.State
  parent: Atlas
  name: State
  nameWithType: State
  fullName: Atlas.State
- uid: Atlas.StateMachine
  commentId: T:Atlas.StateMachine
  name: StateMachine
  nameWithType: StateMachine
  fullName: Atlas.StateMachine
- uid: Atlas
  commentId: N:Atlas
  name: Atlas
  nameWithType: Atlas
  fullName: Atlas
- uid: Atlas.IStateLink.NextState*
  commentId: Overload:Atlas.IStateLink.NextState
  name: NextState
  nameWithType: IStateLink.NextState
  fullName: Atlas.IStateLink.NextState
- uid: Atlas.IStateLink.IsSatisfied*
  commentId: Overload:Atlas.IStateLink.IsSatisfied
  name: IsSatisfied
  nameWithType: IStateLink.IsSatisfied
  fullName: Atlas.IStateLink.IsSatisfied
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
